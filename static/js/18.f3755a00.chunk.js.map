{"version":3,"sources":["_pxp/icons/ProductDocuments.js","_examples/components/IntegrateChatToTable/ExampleChat.js","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","_pxp/components/DialogPxp.js","_parameters/components/Chat/Message.js","_pxp/icons/PaperPlane.js","_parameters/components/Chat/MessageAdd.js","_parameters/components/Chat/ThreadDetails.js","_parameters/components/Chat/ChatView.js"],"names":["ProductDocuments","props","SvgIcon","viewBox","d","ExampleChat","enqueueSnackbar","useSnackbar","useState","loadingScreen","setLoadingScreen","refTable","useRef","open","table","idTableDesc","idTable","undefined","typeChat","idChat","chatView","setChatView","jsonTypeChat","nameForm","columns","desc_example","type","initialValue","label","gridForm","xs","sm","getDataTable","url","params","start","limit","sort","dir","idStore","buttonDel","buttonNew","actionsTableCell","buttonEdit","extraButtons","createChat","buttonIcon","onClick","row","Pxp","apiClient","doRequest","id_tabla","id_data_example","codigo_tipo_chat","descripcion","estado_reg","then","resp","detail","message","variant","error","current","handleRefresh","chat","prev","idComponent","uuIdV4","openChatView","id_tipo_chat","id_chat","resetButton","onSubmit","urlDelete","onClickRow","statesButtonsTableCell","enable","disable","BasicContainer","TablePxp","dataConfig","ref","DialogPxp","titleToolbar","onClose","ChatView","LoadingScreen","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","createSvgIcon","React","useStyles","makeStyles","theme","root","width","paper","minWidth","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","direction","children","transition","fullScreen","fullWidth","iconToolbar","classes","TransitionComponent","className","edge","color","aria-label","marginBottom","display","paddingRight","paddingLeft","avatar","height","image","cursor","maxWidth","Message","user","userNameFrom","idFrom","date","rest","Date","clsx","Box","ml","Avatar","src","bgcolor","py","px","borderRadius","boxShadow","Typography","mt","style","whiteSpace","wordBreak","justifyContent","noWrap","moment","fromNow","PaperPlane","backgroundColor","palette","background","alignItems","padding","divider","fileInput","MessageAdd","disabled","handleSend","thread","onAdd","eventWs","setMessage","handleResetInput","Paper","component","flexGrow","p","Input","input","disableUnderline","onChange","event","persist","target","onKeyUp","keyCode","placeholder","Tooltip","IconButton","fontSize","Divider","flexDirection","dark","ThreadDetails","messagesRef","setUser","useJsonStore","data","setData","useEffect","console","log","scrollToBottom","_authenticated","id_usuario","webSocketListener","handle","e","prevData","datos","concat","id_mensaje","id_usuario_from","from","idUser","user_name_from","mensaje","listenerMessage","removeWebSocketListener","Scrollbars","options","suppressScrollX","map","i","key","fecha_reg","callback","nombre_usuario","afterSaveMsg","createMsg","sendMessageWs","msg","setTimeout","overflow"],"mappings":"+LAWeA,EARU,SAACC,GACxB,OACE,kBAACC,EAAA,EAAD,iBAAaD,EAAb,CAAoBE,QAAQ,cAC1B,0BAAMC,EAAE,k+B,iCC+ICC,UApIK,WAAO,IACjBC,EAAoBC,cAApBD,gBADgB,EAEkBE,oBAAS,GAF3B,mBAEjBC,EAFiB,KAEFC,EAFE,KAGlBC,EAAWC,mBAHO,EAMQJ,mBAAS,CACvCK,MAAM,EACNC,MAAO,wBACPC,YAAa,kBACbC,aAASC,EACTC,SAAU,oBACVC,YAAQF,IAZc,mBAMjBG,EANiB,KAMPC,EANO,KA4ClBC,EAAe,CACnBC,SAAU,0BACVC,QAAS,CACPC,aAAc,CACZC,KAAM,YACNC,aAAc,GACdC,MAAO,eACPC,SAAU,CAAEC,GAAI,GAAIC,GAAI,MAG5BC,aAAc,CACZC,IAAK,4CACLC,OAAQ,CACNC,MAAO,IACPC,MAAO,KACPC,KAAM,kBACNC,IAAK,SAGTC,QAAS,kBACTC,WAAW,EACXC,WAAW,EACXC,iBAAkB,CAChBF,WAAW,EACXG,YAAY,EACZC,aAAc,CACZC,WAAY,CACVjB,MAAO,cACPkB,WAAY,kBAAC,EAAD,MACZC,QAAS,SAACC,IAjDC,SAACA,GAClBC,IAAIC,UACDC,UAAU,CACTlB,IAAK,+BACLC,OAAQ,CACNkB,SAAUJ,EAAIK,gBACdC,iBAAkB,oBAClBC,YAAa,kCACbC,WAAY,MAGfC,MAAK,SAACC,GACLhD,GAAiB,GACjBJ,EAAgBoD,EAAKC,OAAOC,QAAS,CACnCC,QAAUH,EAAKI,MAAoB,QAAZ,YAEzBnD,EAASoD,QAAQC,mBAkCbnB,CAAWG,KAGfiB,KAAM,CACJrC,MAAO,eACPkB,WAAY,kBAAC,EAAD,MACZC,QAAS,SAACC,IAlEG,SAAC,GAAyB,IAAvBhC,EAAsB,EAAtBA,QAASG,EAAa,EAAbA,OAC/BE,GAAY,SAAC6C,GAAD,mBAAC,eACRA,GADO,IAEVlD,UACAG,SACAN,MAAM,EACNsD,YAAaC,mBA6DPC,CAAa,CACXrD,QAASgC,EAAIsB,aACbnD,OAAQ6B,EAAIuB,cAMtBC,aAAa,EACbC,SAAU,CACRxC,IAAK,2CAEPyC,UAAW,0CACXC,WAAY,YAAsC,IAAnC3B,EAAkC,EAAlCA,IAAK4B,EAA6B,EAA7BA,uBACd5B,EAAIuB,SACNK,EAAuBX,KAAKY,SAC5BD,EAAuB/B,WAAWiC,YAElCF,EAAuBX,KAAKa,UAC5BF,EAAuB/B,WAAWgC,YAKxC,OACE,oCACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,WAAY3D,EAAc4D,IAAKvE,KAG3C,kBAACwE,EAAA,EAAD,CACEC,aAAa,OACbC,QAAS,WACPhE,EAAY,2BAAKD,GAAN,IAAgBP,MAAM,MAEnCA,KAAMO,EAASP,MAEf,kBAACyE,EAAA,EAAD,CACExE,MAAOM,EAASN,MAChBE,QAASI,EAASJ,QAClBD,YAAaK,EAASL,YACtBG,SAAUE,EAASF,SACnBiD,YAAa/C,EAAS+C,YACtBhD,OAAQC,EAASD,UAGpBV,GAAiB,kBAAC8E,EAAA,EAAD,S,iCC9IxB,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9E7F,EAAG,iEACD,aAEJwF,EAAQE,QAAUE,G,iCCjBlB,mBAMeE,gBAA4BC,gBAAoB,OAAQ,CACrE/F,EAAG,qDACD,uB,iCCRJ,mBAMe8F,gBAA4BC,gBAAoB,OAAQ,CACrE/F,EAAG,uDACD,sB,iCCRJ,6GAWMgG,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETC,MAAO,CACLD,MAAO,QAIT1F,MAAO,CACL4F,SAAU,KAEZC,OAAQ,CACNC,SAAU,YAEZC,MAAO,CACLC,WAAYR,EAAMS,QAAQ,GAC1BC,KAAM,OAIJC,EAAad,IAAMe,YAAW,SAAoBjH,EAAOiF,GAE7D,OAAO,kBAAC,IAAD,eAAOiC,UAAU,QAAQjC,IAAKA,GAASjF,OA0CjCkF,IAvCG,SAAC,GASZ,IARLiC,EAQI,EARJA,SAKAhC,GAGI,EAPJiC,WAOI,EANJC,WAMI,EALJC,UAKI,EAJJC,YAII,EAHJpC,cACAvE,EAEI,EAFJA,KACAwE,EACI,EADJA,QAEMoC,EAAUrB,IAEhB,OACE,kBAAC,IAAD,CACEkB,YAAU,EACVzG,KAAMA,EACNwE,QAASA,EACTqC,oBAAqBT,GAErB,kBAAC,IAAD,CAAQU,UAAWF,EAAQd,QACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiB,KAAK,QACLC,MAAM,UACN9E,QAASsC,EACTyC,aAAW,SAEX,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYjE,QAAQ,KAAK8D,UAAWF,EAAQZ,OACzCzB,KAINgC,K,6LC5DDhB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJwB,aAAczB,EAAMS,QAAQ,GAC5BiB,QAAS,OACTC,aAAc,OACdC,YAAa,QAEfC,OAAQ,CACNC,OAAQ,GACR5B,MAAO,IAET6B,MAAO,CACLC,OAAQ,UACRF,OAAQ,OACRG,SAAU,OACV/B,MAAO,SAyDIgC,MArDf,YASI,IARFb,EAQC,EARDA,UACAQ,EAOC,EAPDA,OACAM,EAMC,EANDA,KACAC,EAKC,EALDA,aACAC,EAIC,EAJDA,OACA/E,EAGC,EAHDA,QACAgF,EAEC,EAFDA,KACGC,EACF,sFACKpB,EAAUrB,IAEhB,OADoBwC,GAAQ,IAAIE,KAE9B,uCAAKnB,UAAWoB,YAAKtB,EAAQlB,KAAMoB,IAAgBkB,GACjD,kBAACG,EAAA,EAAD,CAAKhB,QAAQ,OAAOO,SAAU,IAAKU,GAAIR,IAASE,EAAS,OAAS,GAChE,kBAACO,EAAA,EAAD,CAAQvB,UAAWF,EAAQU,OAAQgB,IAAKhB,IACxC,kBAACa,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACD,EAAA,EAAD,CACEI,QAASX,IAASE,EAAS,iBAAmB,qBAC9Cd,MAAOY,IAASE,EAAS,yBAA2B,eACpDU,GAAI,EACJC,GAAI,EACJC,aAAa,eACbC,UAAW,GAEX,kBAACC,EAAA,EAAD,CAAY5B,MAAM,UAAUhE,QAAQ,MACjC6E,GAEH,kBAACM,EAAA,EAAD,CAAKU,GAAI,GACP,kBAACD,EAAA,EAAD,CACE5B,MAAM,UACNhE,QAAQ,QACR8F,MAAO,CACLC,WAAY,WACZC,UAAW,cAGZjG,KAIP,kBAACoF,EAAA,EAAD,CAAKU,GAAI,EAAG1B,QAAQ,OAAO8B,eAAe,YACxC,kBAACL,EAAA,EAAD,CAAYM,QAAM,EAAClC,MAAM,gBAAgBhE,QAAQ,WAC9CmG,IAAOpB,GAAMqB,gB,2DC9DbC,EARI,SAACjK,GAClB,OACE,kBAACC,EAAA,EAAD,iBAAaD,EAAb,CAAoBE,QAAQ,cAC1B,0BAAMC,EAAE,ohCCqBRgG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ4D,gBAAiB7D,EAAM8D,QAAQC,WAAWvE,QAC1CkC,QAAS,OACTsC,WAAY,SACZC,QAASjE,EAAMS,QAAQ,EAAG,IAE5ByD,QAAS,CACPhE,MAAO,EACP4B,OAAQ,IAEVqC,UAAW,CACTzC,QAAS,YA2DE0C,MAvDf,YAQI,IAPF/C,EAOC,EAPDA,UACAgD,EAMC,EANDA,SAIAC,GAEC,EALDC,OAKC,EAJDC,MAIC,EAHDC,QAGC,EAFDH,YACG/B,EACF,gFACKpB,EAAUrB,IADf,EAG6B5F,mBAAS,IAHtC,mBAGMoD,EAHN,KAGeoH,EAHf,KAQKC,EAAmB,WACvBD,EAAW,KASb,OACE,uCAAKrD,UAAWoB,YAAKtB,EAAQlB,KAAMoB,IAAgBkB,GACjD,kBAACqC,EAAA,EAAD,CAAOrH,QAAQ,WAAWsH,UAAWnC,IAAKoC,SAAU,EAAGnC,GAAI,EAAGoC,EAAG,GAC/D,kBAACC,EAAA,EAAD,CACE3D,UAAWF,EAAQ8D,MACnBC,kBAAgB,EAChBjE,WAAS,EACT1B,MAAOjC,EACP6H,SAtBa,SAACC,GACpBA,EAAMC,UACNX,EAAWU,EAAME,OAAO/F,QAqBlBgG,QAhBY,SAACH,GACG,KAAlBA,EAAMI,SACRlB,EAAWhH,EAASqH,IAehBc,YAAY,qBAGhB,kBAACC,EAAA,EAAD,CAASnF,MAAM,QACb,8BACE,kBAACoF,EAAA,EAAD,CACEpE,MAAM,YACN8C,UAAW/G,GAAW+G,EACtB5H,QAAS,kBAAM6H,EAAWhH,EAASqH,KAEnC,kBAAC,EAAD,CAAYiB,SAAS,aAI3B,kBAACC,EAAA,EAAD,CAASxE,UAAWF,EAAQ+C,Y,gBCxE5BpE,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ6E,SAAU,EACVpD,QAAS,OACToE,cAAe,SACfjC,gBAAiB7D,EAAM8D,QAAQC,WAAWgC,UA8I/BC,EA3IO,SAAC,GAAsC,IAApCvB,EAAmC,EAAnCA,QAAS5J,EAA0B,EAA1BA,OAAQgD,EAAkB,EAAlBA,YAClCsD,EAAUrB,IACVmG,EAAc3L,iBAAO,MAF+B,EAIlCJ,qBAJkC,mBAInDiI,EAJmD,KAI7C+D,EAJ6C,KAMpDxK,EAAe,CACnBC,IAAK,mCACLC,OAAQ,CACNC,MAAO,IACPC,MAAO,QACPC,KAAM,aACNC,IAAK,MACLiC,QAASpD,IAb6C,EAiBhCsL,YAAazK,GAA/B0K,EAjBkD,EAiBlDA,KAAMC,EAjB4C,EAiB5CA,QAqBdC,qBAAU,WACRC,QAAQC,IAAI,OAAQJ,GAChBA,GACFH,EAAYxI,QAAQgJ,eAAe,KAEpC,CAACL,IAEJE,qBAAU,WAERJ,EAAQvJ,IAAIC,UAAU8J,eAAeC,YACrCC,YAAkB,CAChBxB,MAAOX,EACP5G,cACAgJ,OAAQ,SAACC,IAhCW,SAACA,GACvBP,QAAQC,IAAIM,GACZT,GAAQ,SAACU,GACP,GAAIA,EACF,OAAO,2BACFA,GADL,IAEEC,MAAOD,EAASC,MAAMC,OAAO,CAC3B,CACEC,WAAYpJ,cACZqJ,gBAAiBL,EAAEM,KAAKC,OACxBC,eAAgBR,EAAEM,KAAKjF,KACvBoF,QAAST,EAAES,gBAMrBtB,EAAYxI,QAAQgJ,eAAe,GAgB/Be,CAAgBV,QAGnB,IAGHR,qBAAU,WACR,OAAO,WACLC,QAAQC,IAAI,aACZiB,YAAwB,CACtB5J,cACAuH,MAAOX,OAGV,IA8CH,OACE,yBAAKpD,UAAWF,EAAQlB,MACtB,kBAAC4F,EAAA,EAAD,MACA,kBAACnD,EAAA,EAAD,CACEoC,SAAU,EACVC,EAAG,EACHnG,IAAKqH,EACLpB,UAAW6C,aACXC,QAAS,CAAEC,iBAAiB,IAE3BxB,GACCA,EAAKY,MAAMa,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAEZ,WACP/E,KAAMA,EACNC,aAAc0F,EAAER,eAChBjF,OAAQyF,EAAEX,gBACV7J,QAASwK,EAAEP,QACXjF,KAAMwF,EAAEE,gBAIhB,kBAAC,EAAD,CAAYvD,QAASA,EAASH,WArDf,SAAChH,EAAS2K,GACX,KAAZ3K,IACF+I,GAAQ,SAACU,GACP,GAAIA,EACF,OAAO,2BACFA,GADL,IAEEC,MAAOD,EAASC,MAAMC,OAAO,CAC3B,CACEC,WAAYpJ,cACZqJ,gBAAiBhF,EACjBmF,eAAgB3K,IAAIC,UAAU8J,eAAewB,eAC7CX,QAASjK,UAxBL,SAACA,EAAS6K,GAC1BxL,IAAIC,UACDC,UAAU,CACTlB,IAAK,qCACLC,OAAQ,CACNqC,QAASpD,EACT0M,QAASjK,KAGZH,MAAK,SAACC,GACL+K,OAoBFC,CAAU9K,GAAS,WACjBiJ,QAAQC,IAAI,mBAEd6B,YAAc,CACZjD,MAAOX,EACP6D,IAAKhL,IAEPiL,YAAW,WACTtC,EAAYxI,QAAQgJ,eAAe,KAClC,KACHwB,UC/HAnI,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ4D,gBAAiB7D,EAAM8D,QAAQC,WAAWgC,KAC1CjE,OAAQ,OACRJ,QAAS,OACT8G,SAAU,SACVlI,SAAU,WACVJ,MAAM,YA0BKlB,IAvBE,SAAC,GAOZ,EANJxE,MAMK,IALLE,EAKI,EALJA,QACAD,EAII,EAJJA,YACAG,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAgD,EACI,EADJA,YAEMsD,EAAUrB,IAEVsF,EAAK,UAAMxK,EAAN,YAAkBH,EAAlB,YAAiCC,EAAjC,YAA4CG,GAEvD,OACE,yBAAKwG,UAAWF,EAAQlB,MACtB,kBAAC,EAAD,CACEwE,QAASW,EACTvK,OAAQA,EACRgD,YAAaA","file":"static/js/18.f3755a00.chunk.js","sourcesContent":["import React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst ProductDocuments = (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 50 50\">\n      <path d=\"M 11 3 A 1.0001 1.0001 0 0 0 10 4 L 10 8 L 9 8 A 1.0001 1.0001 0 0 0 8 9 L 8 13 L 7 13 A 1.0001 1.0001 0 0 0 6 14 L 6 29 L 4 29 A 1.0001 1.0001 0 0 0 3 30 L 3 46 A 1.0001 1.0001 0 0 0 4 47 L 46 47 A 1.0001 1.0001 0 0 0 47 46 L 47 30 A 1.0001 1.0001 0 0 0 46 29 L 44 29 L 44 14 A 1.0001 1.0001 0 0 0 43 13 L 42 13 L 42 9 A 1.0001 1.0001 0 0 0 41 8 L 40 8 L 40 4 A 1.0001 1.0001 0 0 0 39 3 L 11 3 z M 12 5 L 38 5 L 38 8 L 12 8 L 12 5 z M 10 10 L 10.832031 10 A 1.0001 1.0001 0 0 0 11.158203 10 L 38.832031 10 A 1.0001 1.0001 0 0 0 39.158203 10 L 40 10 L 40 13 L 10 13 L 10 10 z M 8 15 L 8.8320312 15 A 1.0001 1.0001 0 0 0 9.1582031 15 L 40.832031 15 A 1.0001 1.0001 0 0 0 41.158203 15 L 42 15 L 42 29 L 31 29 A 1.0001 1.0001 0 0 0 30 30 C 30 32.773666 27.773666 35 25 35 C 22.226334 35 20 32.773666 20 30 A 1.0001 1.0001 0 0 0 19 29 L 8 29 L 8 15 z M 5 31 L 18.203125 31 C 18.709475 34.363146 21.49988 37 25 37 C 28.50012 37 31.290525 34.363146 31.796875 31 L 45 31 L 45 45 L 5 45 L 5 31 z\"/>\n    </SvgIcon>\n  );\n};\n\nexport default ProductDocuments;\n","/**\n * Example for using Chat (typeChat pxp)\n * @copyright Kplian Ltda 2020\n * @uthor Favio Figueroa\n */\nimport React, {useRef, useState} from 'react';\nimport { v4 as uuIdV4 } from 'uuid';\nimport { Button } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport BasicContainer from '../../../_pxp/containers/BasicContainer';\nimport TablePxp from '../../../_pxp/components/Table/TablePxp';\nimport ProductDocuments from '../../../_pxp/icons/ProductDocuments';\nimport DialogPxp from '../../../_pxp/components/DialogPxp';\nimport ChatView from '../../../_parameters/components/Chat/ChatView';\nimport Pxp from '../../../Pxp';\nimport LoadingScreen from '../../../_pxp/components/LoadingScreen';\n\nconst ExampleChat = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [loadingScreen, setLoadingScreen] = useState(false);\n  const refTable = useRef();\n\n  // begin code for open chat view, we need copy that for another tables\n  const [chatView, setChatView] = useState({\n    open: false,\n    table: 'example.tdata_example', // change that for another table\n    idTableDesc: 'id_data_example', // change that for another id\n    idTable: undefined,\n    typeChat: 'CHAT_DATA_EXAMPLE', // Code of tipo_chat\n    idChat: undefined,\n  });\n  const openChatView = ({ idTable, idChat }) => {\n    setChatView((prev) => ({\n      ...prev,\n      idTable,\n      idChat,\n      open: true,\n      idComponent: uuIdV4(),\n    }));\n  };\n  // end example\n  const createChat = (row) => {\n    Pxp.apiClient\n      .doRequest({\n        url: 'parametros/Chat/insertarChat',\n        params: {\n          id_tabla: row.id_data_example,\n          codigo_tipo_chat: 'CHAT_DATA_EXAMPLE',\n          descripcion: 'CHAT_DATA_EXAMPLE: chat example',\n          estado_reg: '',\n        },\n      })\n      .then((resp) => {\n        setLoadingScreen(false);\n        enqueueSnackbar(resp.detail.message, {\n          variant: !resp.error ? 'success' : 'error',\n        });\n        refTable.current.handleRefresh();\n      });\n  };\n\n  const jsonTypeChat = {\n    nameForm: 'Formulario Example chat',\n    columns: {\n      desc_example: {\n        type: 'TextField',\n        initialValue: '',\n        label: 'Desc Example',\n        gridForm: { xs: 12, sm: 12 },\n      },\n    },\n    getDataTable: {\n      url: 'example/DataExample/listarDataExampleChat',\n      params: {\n        start: '0',\n        limit: '10',\n        sort: 'id_data_example',\n        dir: 'desc',\n      },\n    },\n    idStore: 'id_data_example',\n    buttonDel: true,\n    buttonNew: true,\n    actionsTableCell: {\n      buttonDel: false,\n      buttonEdit: false,\n      extraButtons: {\n        createChat: {\n          label: 'Create Chat',\n          buttonIcon: <ProductDocuments />,\n          onClick: (row) => {\n            createChat(row);\n          },\n        },\n        chat: {\n          label: 'example Chat',\n          buttonIcon: <ProductDocuments />,\n          onClick: (row) => {\n            openChatView({\n              idTable: row.id_tipo_chat,\n              idChat: row.id_chat,\n            });\n          },\n        },\n      },\n    },\n    resetButton: true,\n    onSubmit: {\n      url: 'example/DataExample/insertarDataExample',\n    },\n    urlDelete: 'example/DataExample/eliminarDataExample',\n    onClickRow: ({ row, statesButtonsTableCell }) => {\n      if (row.id_chat) {\n        statesButtonsTableCell.chat.enable();\n        statesButtonsTableCell.createChat.disable();\n      } else {\n        statesButtonsTableCell.chat.disable();\n        statesButtonsTableCell.createChat.enable();\n      }\n    },\n  };\n\n  return (\n    <>\n      <BasicContainer>\n        <TablePxp dataConfig={jsonTypeChat} ref={refTable} />\n      </BasicContainer>\n\n      <DialogPxp\n        titleToolbar=\"Chat\"\n        onClose={() => {\n          setChatView({ ...chatView, open: false });\n        }}\n        open={chatView.open}\n      >\n        <ChatView\n          table={chatView.table}\n          idTable={chatView.idTable}\n          idTableDesc={chatView.idTableDesc}\n          typeChat={chatView.typeChat}\n          idComponent={chatView.idComponent}\n          idChat={chatView.idChat}\n        />\n      </DialogPxp>\n      {loadingScreen && <LoadingScreen />}\n    </>\n  );\n};\n\nexport default ExampleChat;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Typography from '@material-ui/core/Typography';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    //marginBottom: theme.spacing(2),\n    //marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Slide direction=\"right\" ref={ref} {...props} />;\n});\n\nconst DialogPxp = ({\n  children,\n  transition,\n  fullScreen,\n  fullWidth,\n  iconToolbar,\n  titleToolbar,\n  open,\n  onClose,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={onClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={onClose}\n            aria-label=\"close\"\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {titleToolbar}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {children}\n    </Dialog>\n  );\n};\n\nexport default DialogPxp;\n","/**\n * Component for render the message\n * @copyright Kplian Ltda 2020\n * @uthor Favio Figueroa\n */\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { Avatar, Box, Link, Typography, makeStyles } from '@material-ui/core';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    paddingRight: '10px',\n    paddingLeft: '10px',\n  },\n  avatar: {\n    height: 32,\n    width: 32,\n  },\n  image: {\n    cursor: 'pointer',\n    height: 'auto',\n    maxWidth: '100%',\n    width: 380,\n  },\n}));\n\nfunction Message({\n  className,\n  avatar,\n  user,\n  userNameFrom,\n  idFrom,\n  message,\n  date,\n  ...rest\n}) {\n  const classes = useStyles();\n  const dateMessage = date || new Date();\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box display=\"flex\" maxWidth={500} ml={user === idFrom ? 'auto' : 0}>\n        <Avatar className={classes.avatar} src={avatar} />\n        <Box ml={2}>\n          <Box\n            bgcolor={user === idFrom ? 'secondary.main' : 'background.default'}\n            color={user === idFrom ? 'secondary.contrastText' : 'text.primary'}\n            py={1}\n            px={2}\n            borderRadius=\"borderRadius\"\n            boxShadow={1}\n          >\n            <Typography color=\"inherit\" variant=\"h6\">\n              {userNameFrom}\n            </Typography>\n            <Box mt={1}>\n              <Typography\n                color=\"inherit\"\n                variant=\"body1\"\n                style={{\n                  whiteSpace: 'pre-wrap',\n                  wordBreak: 'break-all',\n                }}\n              >\n                {message}\n              </Typography>\n            </Box>\n          </Box>\n          <Box mt={1} display=\"flex\" justifyContent=\"flex-end\">\n            <Typography noWrap color=\"textSecondary\" variant=\"caption\">\n              {moment(date).fromNow()}\n              {/* {moment.utc(dateMessage).local().fromNow()} */}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst PaperPlane = (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 50 50\">\n      <path d=\"M 48.90625 0 C 48.773438 0.015625 48.648438 0.0585938 48.53125 0.125 L 0.53125 26.125 C 0.183594 26.3125 -0.0195313 26.6875 0.0117188 27.082031 C 0.046875 27.476563 0.3125 27.8125 0.6875 27.9375 L 14.3125 32.40625 L 13 45.90625 C 12.945313 46.34375 13.1875 46.765625 13.59375 46.941406 C 14 47.117188 14.472656 47 14.75 46.65625 L 23.34375 36.9375 L 36.3125 49.71875 C 36.566406 49.96875 36.933594 50.0625 37.277344 49.964844 C 37.621094 49.867188 37.882813 49.597656 37.96875 49.25 L 49.96875 1.25 C 50.058594 0.933594 49.980469 0.59375 49.769531 0.34375 C 49.554688 0.09375 49.234375 -0.0351563 48.90625 0 Z M 47.46875 2.9375 L 36.4375 47.0625 L 24.59375 35.375 L 41.8125 11.59375 C 42.191406 11.195313 42.179688 10.566406 41.78125 10.1875 C 41.382813 9.808594 40.753906 9.820313 40.375 10.21875 L 15.21875 30.59375 L 3.5 26.78125 Z M 35.78125 16.5 L 22.65625 34.71875 C 22.621094 34.757813 22.589844 34.800781 22.5625 34.84375 L 22.5 34.90625 C 22.476563 34.9375 22.457031 34.96875 22.4375 35 L 15.28125 43.03125 L 16.34375 32.21875 Z\"/>\n    </SvgIcon>\n  );\n};\n\nexport default PaperPlane;\n","/**\n * Component for render the form for sending message\n * @copyright Kplian Ltda 2020\n * @uthor Favio Figueroa\n */\nimport React, { useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  SvgIcon,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core';\nimport { sendMessageWs } from 'pxp-client';\nimport PaperPlane from '../../../_pxp/icons/PaperPlane';\n/*\nimport { Send as SendIcon } from 'react-feather';\n*/\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1, 2),\n  },\n  divider: {\n    width: 1,\n    height: 24,\n  },\n  fileInput: {\n    display: 'none',\n  },\n}));\n\nfunction MessageAdd({\n  className,\n  disabled,\n  thread,\n  onAdd,\n  eventWs,\n  handleSend,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  const [message, setMessage] = useState('');\n  const handleChange = (event) => {\n    event.persist();\n    setMessage(event.target.value);\n  };\n  const handleResetInput = () => {\n    setMessage('');\n  };\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      handleSend(message, handleResetInput);\n    }\n  };\n\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Paper variant=\"outlined\" component={Box} flexGrow={1} ml={2} p={1}>\n        <Input\n          className={classes.input}\n          disableUnderline\n          fullWidth\n          value={message}\n          onChange={handleChange}\n          onKeyUp={handleKeyUp}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <span>\n          <IconButton\n            color=\"secondary\"\n            disabled={!message || disabled}\n            onClick={() => handleSend(message, handleResetInput)}\n          >\n            <PaperPlane fontSize=\"small\" />\n          </IconButton>\n        </span>\n      </Tooltip>\n      <Divider className={classes.divider} />\n    </div>\n  );\n}\n\nexport default MessageAdd;\n","/**\n * Component for draw the chat (message and messageAdd)\n * @copyright Kplian Ltda 2020\n * @uthor Favio Figueroa\n */\nimport React, { useEffect, useRef, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Box, Divider } from '@material-ui/core';\n\nimport {\n  removeWebSocketListener,\n  sendMessageWs,\n  webSocketListener,\n} from 'pxp-client';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { v4 as uuIdV4 } from 'uuid';\nimport Message from './Message';\nimport MessageAdd from './MessageAdd';\nimport useJsonStore from '../../../_pxp/hooks/useJsonStore';\nimport Pxp from '../../../Pxp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.dark,\n  },\n}));\nconst ThreadDetails = ({ eventWs, idChat, idComponent }) => {\n  const classes = useStyles();\n  const messagesRef = useRef(null);\n\n  const [user, setUser] = useState();\n\n  const getDataTable = {\n    url: 'parametros/Mensaje/listarMensaje',\n    params: {\n      start: '0',\n      limit: '10000',\n      sort: 'id_mensaje',\n      dir: 'asc',\n      id_chat: idChat,\n    },\n  };\n\n  const { data, setData } = useJsonStore(getDataTable);\n\n  const listenerMessage = (e) => {\n    console.log(e);\n    setData((prevData) => {\n      if (prevData) {\n        return {\n          ...prevData,\n          datos: prevData.datos.concat([\n            {\n              id_mensaje: uuIdV4(),\n              id_usuario_from: e.from.idUser,\n              user_name_from: e.from.user,\n              mensaje: e.mensaje,\n            },\n          ]),\n        };\n      }\n    });\n    messagesRef.current.scrollToBottom(0);\n  };\n  useEffect(() => {\n    console.log('data', data);\n    if (data) {\n      messagesRef.current.scrollToBottom(0);\n    }\n  }, [data]);\n  // mount\n  useEffect(() => {\n    // eslint-disable-next-line no-underscore-dangle\n    setUser(Pxp.apiClient._authenticated.id_usuario);\n    webSocketListener({\n      event: eventWs,\n      idComponent,\n      handle: (e) => {\n        listenerMessage(e);\n      },\n    });\n  }, []);\n\n  // we need to remove the webSocketListener when the component is unmount\n  useEffect(() => {\n    return () => {\n      console.log('desmontar');\n      removeWebSocketListener({\n        idComponent,\n        event: eventWs,\n      });\n    };\n  }, []);\n\n  const createMsg = (message, afterSaveMsg) => {\n    Pxp.apiClient\n      .doRequest({\n        url: 'parametros/Mensaje/insertarMensaje',\n        params: {\n          id_chat: idChat,\n          mensaje: message,\n        },\n      })\n      .then((resp) => {\n        afterSaveMsg();\n      });\n  };\n  const handleSend = (message, callback) => {\n    if (message !== '') {\n      setData((prevData) => {\n        if (prevData) {\n          return {\n            ...prevData,\n            datos: prevData.datos.concat([\n              {\n                id_mensaje: uuIdV4(),\n                id_usuario_from: user,\n                user_name_from: Pxp.apiClient._authenticated.nombre_usuario,\n                mensaje: message,\n              },\n            ]),\n          };\n        }\n      });\n      createMsg(message, () => {\n        console.log('msg has sent');\n      });\n      sendMessageWs({\n        event: eventWs,\n        msg: message,\n      });\n      setTimeout(() => {\n        messagesRef.current.scrollToBottom(0);\n      }, 100);\n      callback();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Divider />\n      <Box\n        flexGrow={1}\n        p={2}\n        ref={messagesRef}\n        component={Scrollbars}\n        options={{ suppressScrollX: true }}\n      >\n        {data &&\n          data.datos.map((i) => (\n            <Message\n              key={i.id_mensaje}\n              user={user}\n              userNameFrom={i.user_name_from}\n              idFrom={i.id_usuario_from}\n              message={i.mensaje}\n              date={i.fecha_reg}\n            />\n          ))}\n      </Box>\n      <MessageAdd eventWs={eventWs} handleSend={handleSend} />\n    </div>\n  );\n};\n\nexport default ThreadDetails;\n","/**\n * Component for showing the chat for some table(ttipo_chat)\n * @copyright Kplian Ltda 2020\n * @uthor Favio Figueroa\n *\n */\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport ThreadDetails from './ThreadDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative',\n    width:'100%'\n  },\n}));\nconst ChatView = ({\n  table,\n  idTable,\n  idTableDesc,\n  typeChat,\n  idChat,\n  idComponent,\n}) => {\n  const classes = useStyles();\n\n  const event = `${typeChat}_${idTableDesc}_${idTable}_${idChat}`;\n\n  return (\n    <div className={classes.root}>\n      <ThreadDetails\n        eventWs={event}\n        idChat={idChat}\n        idComponent={idComponent}\n      />\n    </div>\n  );\n};\n\nexport default ChatView;\n"],"sourceRoot":""}